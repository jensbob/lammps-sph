echo               both
variable           ndim string  2d
dimension          ${ndim}
units              si
atom_style         hybrid  bond meso
boundary           p p p
communicate        single vel yes
# create simulation box

#3D box
variable           Ly  equal 1.803e-3
variable           Lx  equal ${Ly}/50*20
variable           dx   equal 2.5e-5
variable           sdpd_rho equal 1000
variable           sdpd_c equal 3e-1
variable           sdpd_eta equal 1.5e-2
variable           sdpd_mu  equal ${sdpd_eta}/${sdpd_rho} 
variable          h equal 2.7*${dx}
variable          gx equal 6.12
variable          Nfreq equal 100000
variable          r0       equal 1.4*${dx}
variable          H        equal 5.3e-4
variable          savetime equal 10000
include            ${ndim}-vars.lmp

region             box block 0.0 ${Lx}  0.0 ${Ly} -${dx} ${dx} units box
read_data           poly3d.txt

special_bonds   lj 1 1 1
bond_style fene
bond_coeff 1 ${H} ${r0}  0 0


mass               1 ${sdpd_mass}
set                group all meso_rho ${sdpd_rho}

# use Tait's EOS in combination with Morris' laminar viscosity.
# We set rho_0 = 1000 kg/m^3, c = 0.1 m/s, h = 6.5e-5 m.
# The dynamic viscosity is set to 1.0e-3 Pa s, corresponding to a kinematic viscosity of 1.0e-6 m^2/s
pair_style         hybrid/overlay sph/rhosum 1 sdpd
variable           sdpd_temp index 1e9
pair_coeff         * * sph/rhosum   ${h}
pair_coeff         * *    sdpd ${sdpd_rho} ${sdpd_c} ${sdpd_eta} ${h} ${sdpd_temp}

compute            rho_peratom all meso_rho/atom
compute            e_peratom all meso_e/atom
compute            ke_peratom all ke/atom
compute            esph all reduce sum c_e_peratom
compute            ke all ke
compute            sdpd_kin all temp
variable           etot equal c_ke+c_esph

# do full time integration for shear driver and fluid, but keep walls stationary
fix                integrate_fix_full all meso

variable bodyfx atom mass*${gx}*((y>${Ly}/2.0)-(y<${Ly}/2.0))
fix reverce_periodic all addforce v_bodyfx 0.0 0.0           

# "profile" corrected temperature
compute         pTemp all temp/profile 1 1 0 y 5

# average velocity
compute vxav all reduce ave vx
variable  vx_cm atom vx-c_vxav
fix av_vx all ave/spatial 1 ${Nfreq} ${Nfreq} &
y center 0.01 v_vx_cm file vx.av ave one units reduced

compute stress all stress/atom virial bond
variable stress_xx atom c_stress[1]
fix av_xx_stress all ave/spatial 1 ${savetime} ${savetime} y lower 0.01 v_stress_xx file sxx.av units reduced ave one

variable stress_yy atom c_stress[2]
fix av_yy_stress all ave/spatial 1 ${savetime} ${savetime} y lower 0.01 v_stress_yy file syy.av units reduced ave one

variable stress_xy atom c_stress[4]
fix av_xy_stress all ave/spatial 1 ${savetime} ${savetime} y lower 0.01 v_stress_xy file sxy.av units reduced ave one

compute stress_bond all stress/atom bond
variable vstress_bond atom c_stress_bond[4]
fix av_xy_bond all ave/spatial 1 ${savetime} ${savetime} y lower 0.01 v_vstress_bond file sxy-bond.av units reduced ave one

dump               dump_id all custom ${savetime} dump*.dat id type x y z vx vy vz c_rho_peratom
dump_modify        dump_id first yes
dump_modify        dump_id sort id
dump_modify        dump_id pad 8

thermo_style       custom step c_sdpd_kin
thermo_modify      norm no
thermo             100
dump imgDump all image ${savetime} image.*.jpg type type atom yes bond atom 5e-6 adiam 3e-5 view 0 0 zoom 1.5 box yes 0.01
dump_modify        imgDump pad 9

neighbor           3.0e-6 bin
include            settimestep.lmp
timestep           ${dt}
run                1000000  every 1000 "velocity all zero linear" & 
 "velocity all zero angular"
