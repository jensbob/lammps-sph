log                ${dname}/log.lammps
echo               both
dimension          2
units              si
atom_style         meso
boundary          p p p
include           2d-vars.lmp
# create simulation box
variable           pLz    equal  1.0e-6
variable           nLz    equal  -1.0e-6
region             box block 0.0 ${Lx}  0.0 ${Ly} ${nLz} ${pLz} units box
create_box         2 box

# create fluid particles
lattice            sq ${dx}
create_atoms       1 region box

variable           xcenter equal 0.5*${Lx}
variable           ycenter equal 0.5*${Ly}
region             rbubble cylinder z ${xcenter} ${ycenter} ${cyl_r} EDGE EDGE units box
group	           gbubble region rbubble

# all bubble atoms
set	           group gbubble type 2

# all solvent atoms
group              gsolvent type 1

mass               1 ${sph_mass}
mass               2 ${sph_mass}
set                group all meso_rho ${sph_rho}

# use Tait's EOS in combination with Morris' laminar viscosity.
# We set rho_0 = 1000 kg/m^3, c = 0.1 m/s, h = 6.5e-5 m.
# The dynamic viscosity is set to 1.0e-3 Pa s, corresponding to a kinematic viscosity of 1.0e-6 m^2/s
pair_style         hybrid/overlay sph/rhosum 1 sph/colorgradient 1 sph/taitwater/morris sph/surfacetension
pair_coeff         * * sph/rhosum   ${h}
pair_coeff         1 1 sph/colorgradient ${h} 0
pair_coeff         1 2 sph/colorgradient ${h} 1e-3
pair_coeff         2 2 sph/colorgradient ${h} 0
pair_coeff         * * sph/taitwater/morris ${sph_rho} ${sph_c} ${sph_eta} ${h}
pair_coeff         * * sph/surfacetension ${alpha} ${h}

compute            rho_peratom all meso_rho/atom
compute            colorgradient_peratom all meso_colorgradient/atom

# do full time integration for shear driver and fluid, but keep walls stationary
fix                integrate_fix_full all meso

# force on the buble atoms
variable            var_gx_bubble atom ${gx}*${sph_mass}
fix                 fb_gx gbubble addforce v_var_gx_bubble 0 0

# force on the solvent atoms
variable            var_gx_solvent atom -${gx}*${sph_mass}*count(gsolvent)/count(gbubble)
fix                 fb_gx gsolvent addforce v_var_gx_solvent 0 0

dump               dump_id all custom 1000 ${dname}/dump*.dat id type x y z vx vy vy c_rho_peratom c_colorgradient_peratom
dump_modify        dump_id first yes
dump_modify        dump_id sort id
dump_modify        dump_id pad 8
thermo_modify      norm no
thermo             1000

include            ${ndim}-image.lmp
variable           sph_mu  equal ${sph_eta}/${sph_rho}
include            settimestep.lmp

neighbor           3.0e-6 bin
neigh_modify       delay 0 every 1

timestep           ${dt}
communicate        single vel yes

run                100000
